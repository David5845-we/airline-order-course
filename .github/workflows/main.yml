name: Build, Push Docker Image, and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/airline-order-course:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/airline-order-course:${{ github.sha }}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # 1) 创建目录
            mkdir -p /home/ubuntu/airline-cicd
            cd /home/ubuntu/airline-cicd

            # 2) 安装 Docker（若已装会自动跳过）
            if ! command -v docker &> /dev/null; then
              curl -fsSL https://get.docker.com | sudo bash
            fi

            # 3) 安装 docker-compose plugin（官方 v2）
            sudo apt-get update -y
            sudo apt-get install -y docker-compose-plugin

            # 4) 把当前用户加入 docker 组并激活（不重启）
            sudo usermod -aG docker ubuntu
            newgrp docker

            # 5) 启动 Docker 服务
            sudo systemctl enable --now docker

            sudo -E bash <<'EOF'

            # 1. 安装 / 升级 Docker & compose 插件
            if ! command -v docker >/dev/null 2>&1; then
              curl -fsSL https://get.docker.com | bash
            fi
            apt-get update -qq && apt-get install -y docker-compose-plugin

            # 2. 拉镜像并运行（示例）
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/airline-order-course:latest
            docker stop airline-app 2>/dev/null || true
            docker rm   airline-app 2>/dev/null || true
            docker run -d --name airline-app -p 80:8080 \
              --link airline-mysql-db:db \
              ${{ secrets.DOCKERHUB_USERNAME }}/airline-order-course:latest
            EOF
            
            cd ~/airline-cicd
            docker-compose pull
            docker-compose up -d --remove-orphans
            docker image prune -f
